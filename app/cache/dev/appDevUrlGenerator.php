<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tsldap_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'TSLDAPBundle:Default:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tsldap_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\LDAPBundle\\Controller\\LDAPController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tsldap_Employeelogout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\LDAPBundle\\Controller\\LDAPController::EmployeelogoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/employee/quiz/Logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'TSAdminBundle:Default:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\AdminController::adminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_allTests' => array (  0 =>   array (    0 => 'pages',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\AdminController::testsAction',    'pages' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    1 =>     array (      0 => 'text',      1 => '/admin/allTests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_allResultTests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\AdminController::ResultTestsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ResultTests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editAllTests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\AdminController::editFreeTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editFreeTests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_quiz_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\CandidateTestsController::quizAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emplyee/quiz/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_candidateTests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\CandidateTestsController::candidateTestsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emplyee/quiz/candidateTests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_persistCandidateTests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\CandidateTestsController::persistFinalSubmitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emplyee/quiz/candidateTests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_candidateTest' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\CandidateTestsController::checkTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/emplyee/quiz/candidateTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_candidateDescriptionTest' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\CandidateTestsController::descriptionTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/emplyee/quiz/candidatedescriptionTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_checkQuestions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\CandidateTestsController::checkQuestionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emplyee/quiz/checkQuestions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_cvs' => array (  0 =>   array (    0 => 'pages',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\AdminController::cvsAction',    'pages' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    1 =>     array (      0 => 'text',      1 => '/admin/cvs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_cv' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\AdminController::cvAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/admin/cv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editQuestionn' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::listExcelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/listExcel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_questions' => array (  0 =>   array (    0 => 'pages',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::createQuestionAction',    'pages' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    1 =>     array (      0 => 'text',      1 => '/admin/questions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_question' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::questionAction',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/admin/question',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editQuestionLibrary' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::editQuestionLibraryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editQuestionLibrary',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editQuestion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::editQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editQuestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeQuestion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::removeQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeQuestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeQuestionLibrary' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::removeQuestionLibraryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeQuestionLibrary',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_tests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::testsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/tests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_test' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::testAction',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/admin/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editTest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::editTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_customizeTest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::CustomizeEditTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/ CustomizeEditTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeTest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::removeTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_settingTest' => array (  0 =>   array (    0 => 'pages',    1 => 'id',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::settingTestAction',    'pages' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    2 =>     array (      0 => 'text',      1 => '/admin/settingTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_duplicateTest' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::duplicateTestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/duplicateTest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_uploadQuestion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TestsController::uploadQuestionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/uploadQuestions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_addCandidate' => array (  0 =>   array (    0 => 'pages',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::addCandidateAction',    'pages' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    1 =>     array (      0 => 'text',      1 => '/admin/addCandidate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_addRH' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::addRHAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/addRH',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_addAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::addAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/addAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::editUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editUserSA' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::editSAUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editSaUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editCandidate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::editCandidateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editCandidate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::removeUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeCandidat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\UsersController::removeCandidateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeCandidate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editTests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TablesController::editTestsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editTests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_editValue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TablesController::editValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/editValue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeValue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\TablesController::removeValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeValue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_invitation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\NotificationController::invitationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/invitation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_otherInvitation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\NotificationController::persistOtherInvitationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/TestsInvitation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_confirmInvitation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\NotificationController::confirmInvitationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/confirmInvitation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_confirmOtherInvitation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\NotificationController::confirmOtherInvitationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/confirmOtherInvitation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_admin_removeOtherInvitation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\NotificationController::removeOtherInvitationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/removeOtherInvitation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_grapheChartLine' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\StatisticsController::statAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/chartLine',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ts_grapheChartPie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\AdminBundle\\Controller\\StatisticsController::chartPieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/chartPie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tss_rec_offers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\SRecBundle\\Controller\\SRecController::offersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/SRec/offers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tss_rec_cvs' => array (  0 =>   array (    0 => 'pages',  ),  1 =>   array (    '_controller' => 'TS\\SRecBundle\\Controller\\SRecController::cvsAction',    'pages' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    1 =>     array (      0 => 'text',      1 => '/SRec/cvs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tss_rec_cv' => array (  0 =>   array (    0 => 'pages',  ),  1 =>   array (    '_controller' => 'TS\\SRecBundle\\Controller\\SRecController::cvAction',    'pages' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pages',    ),    1 =>     array (      0 => 'text',      1 => '/SRec/cv',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tss_rec_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\SRecBundle\\Controller\\SRecController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/SRec/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tss_rec_tests' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\SRecBundle\\Controller\\SRecController::testsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/SRec/tests',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/candidat/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/candidat/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/candidat/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'employeeLogin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\LDAPBundle\\Controller\\LDAPController::loginEmployeeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/employeeLogin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'emplyeeCheck' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/employee/employeeCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'employeeLogout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/emplyee/employeeLogout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adminLogin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TS\\LDAPBundle\\Controller\\LDAPController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/adminLogin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adminCheck' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/adminCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adminLogout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/adminLogout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
